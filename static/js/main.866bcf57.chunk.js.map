{"version":3,"sources":["components/Card/card.component.jsx","components/Card-List/card-list.components.jsx","components/Search-box/Search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filterSearch","filter","toLowerCase","includes","placholder","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,YAAO,SAAAC,GAAK,OACvB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAK,kEAEP,6BAAKH,EAAMI,QAAQC,OACnB,4BAAIL,EAAMI,QAAQE,aCNTC,G,MAAW,SAAAP,GACtB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMI,QAAQI,KAAI,SAAAJ,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQK,WCLdC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCFOG,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXZ,QAAS,GACTa,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEnB,QAASkB,S,+BAElC,IAAD,SAC0BE,KAAKR,MAA9BZ,EADD,EACCA,QAASa,EADV,EACUA,YACXQ,EAAerB,EAAQsB,QAAO,SAAAtB,GAAO,OACzCA,EAAQC,KAAKsB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK1B,UAAU,aAAf,UACE,8CACA,cAAC,EAAD,CACE4B,WAAW,qBACXjB,aAAc,SAAAkB,GACZ,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAG1C,cAAC,EAAD,CAAU5B,QAASqB,W,GA7BMQ,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.866bcf57.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\nexport const Card = props => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt=\"monster\"\r\n      src={\"https://robohash.org/${props.monster.id}?set=set&size=180x180\"}\r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Card } from \"../Card/card.component\";\r\nimport \"./card-list.styles.css\";\r\nexport const CardList = props => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monster.map(monster => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Search-Box.styles.css\";\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// Import all required components here\nimport { CardList } from \"./components/Card-List/card-list.components\";\nimport { SearchBox } from \"./components/Search-box/Search-box.component\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monster: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monster: users }));\n  }\n  render() {\n    const { monster, searchField } = this.state;\n    const filterSearch = monster.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App-header\">\n        <h1>Find Monster</h1>\n        <SearchBox\n          placholder=\"Search the Monster\"\n          handleChange={e => {\n            this.setState({ searchField: e.target.value });\n          }}\n        />\n        <CardList monster={filterSearch} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}